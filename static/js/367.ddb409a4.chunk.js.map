{"version":3,"file":"static/js/367.ddb409a4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","hooks/hooks.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__gVK0J\",\"title\":\"Contacts_title__LxdN4\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../redux/contacts/contactsSlice';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useContacts } from '../../hooks/hooks';\nimport { infoToast, successToast } from '../Toast/Toast';\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const enterContacts = contacts.some(\n      contact =>\n        (contact.name === name.toLowerCase() && contact.number === number) ||\n        contact.number === number\n    );\n    enterContacts\n      ? infoToast(`${name} or ${number} is already in contacts`)\n      : addContact({ name, number });\n    !enterContacts && successToast('the contact is in the list');\n    setName('');\n    setNumber('');\n  };\n  return ( \n      <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Phone\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Phone number\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"descr\":\"ContactFilter_descr__CqqCU\",\"input\":\"ContactFilter_input__8mWOi\"};","import css from './ContactFilter.module.css';\nimport { useContacts } from '../../hooks/hooks';\n\nexport const ContactFilter = () => {\n  const { filter, setFilter } = useContacts();\n\n    const onChangeFilter = e => {\n    setFilter(e.target.value);\n  };\n  return (\n\n    <label className={css.descr}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import css from './ContactList.module.css';\nimport { Loader } from '../Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from '../../hooks/hooks';\nimport { contactsOperations } from '../../redux/contacts/contactsOperations';\nimport { deleteToast } from '../Toast/Toast';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/authSelectors';\n\nexport const ContactList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={css.list}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <li className={css.item} key={id}>\n                  <p className={css.name}>{name}:</p>\n                  <p className={css.name}>{number}</p>\n                  <button\n                    className={css.btn}\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                      deleteToast(`${name} tel:${number} is deleted`);\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n};","import css from './Contacts.module.css';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nconst Contacts = () => {\n  return (\n    <div className={css.contacts}>\n      <h2 className={css.title}>\n        Enter a name and phone number to add a contact\n      </h2>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContactForm","useState","name","setName","number","setNumber","handleChange","event","target","handleSubmit","preventDefault","enterContacts","some","contact","toLowerCase","infoToast","successToast","className","css","onSubmit","type","placeholder","onChange","pattern","title","required","ContactFilter","e","ContactList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","deleteToast"],"sourceRoot":""}